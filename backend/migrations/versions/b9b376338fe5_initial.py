"""initial

Revision ID: b9b376338fe5
Revises: 
Create Date: 2025-05-01 13:56:57.495299

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b9b376338fe5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('map',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=25), nullable=False),
    sa.Column('type', sa.String(length=25), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('patch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('date_released', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('team',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=15), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('heroes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('health', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('patch_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['patch_id'], ['patch.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'patch_id', name='unique_hero_per_patch')
    )
    op.create_table('match',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('attack_map_id', sa.Integer(), nullable=False),
    sa.Column('defense_map_id', sa.Integer(), nullable=True),
    sa.Column('team1_id', sa.Integer(), nullable=False),
    sa.Column('team2_id', sa.Integer(), nullable=False),
    sa.Column('winning_team_id', sa.Integer(), nullable=True),
    sa.Column('bans_id', sa.Integer(), nullable=True),
    sa.Column('replay_id', sa.String(length=11), nullable=True),
    sa.Column('date_played', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['attack_map_id'], ['map.id'], ),
    sa.ForeignKeyConstraint(['bans_id'], ['bans.id'], ),
    sa.ForeignKeyConstraint(['defense_map_id'], ['map.id'], ),
    sa.ForeignKeyConstraint(['team1_id'], ['team.id'], name='fk_match_team1_id'),
    sa.ForeignKeyConstraint(['team2_id'], ['team.id'], name='fk_match_team2_id'),
    sa.ForeignKeyConstraint(['winning_team_id'], ['team.id'], name='fk_match_winning_team_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('replay_id')
    )
    op.create_table('player',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=42), nullable=False),
    sa.Column('marvel_username', sa.String(length=50), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('marvel_id', sa.String(length=16), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('marvel_id'),
    sa.UniqueConstraint('marvel_username'),
    sa.UniqueConstraint('name')
    )
    op.create_table('point',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('map_id', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['map_id'], ['map.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('map_id', 'number', name='unique_point_per_map')
    )
    op.create_table('ability_e',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hero_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('cooldown', sa.Float(), nullable=True),
    sa.Column('damage', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('patch_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hero_id'], ['heroes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patch_id'], ['patch.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'patch_id', name='unique_abilitye_per_patch')
    )
    op.create_table('ability_shift',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hero_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('cooldown', sa.Float(), nullable=True),
    sa.Column('damage', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('patch_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hero_id'], ['heroes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patch_id'], ['patch.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'patch_id', name='unique_abilityshift_per_patch')
    )
    op.create_table('partition',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('point_id', sa.Integer(), nullable=False),
    sa.Column('segment_number', sa.Integer(), nullable=False),
    sa.Column('fights', sa.Integer(), nullable=False),
    sa.Column('ults_for', sa.Integer(), nullable=False),
    sa.Column('ults_against', sa.Integer(), nullable=False),
    sa.Column('time', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ),
    sa.ForeignKeyConstraint(['point_id'], ['point.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('match_id', 'team_id', 'point_id', 'segment_number', name='unique_partition')
    )
    op.create_table('passive',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=25), nullable=False),
    sa.Column('cooldown', sa.Integer(), nullable=True),
    sa.Column('trigger', sa.String(length=25), nullable=True),
    sa.Column('description', sa.String(length=50), nullable=True),
    sa.Column('hero_id', sa.Integer(), nullable=True),
    sa.Column('patch_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hero_id'], ['heroes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patch_id'], ['patch.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'patch_id', name='unique_passive_per_patch')
    )
    op.create_table('player_map_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('map_id', sa.Integer(), nullable=False),
    sa.Column('wins', sa.Integer(), nullable=True),
    sa.Column('losses', sa.Integer(), nullable=True),
    sa.Column('kills', sa.Integer(), nullable=True),
    sa.Column('deaths', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['map_id'], ['map.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player_match_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('kills', sa.Integer(), nullable=True),
    sa.Column('deaths', sa.Integer(), nullable=True),
    sa.Column('assists', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('primary_fire',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hero_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('damage', sa.Float(), nullable=True),
    sa.Column('fire_rate', sa.Float(), nullable=True),
    sa.Column('is_projectile', sa.Boolean(), nullable=True),
    sa.Column('patch_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hero_id'], ['heroes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patch_id'], ['patch.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'patch_id', name='unique_primaryfire_per_patch')
    )
    op.create_table('secondary_fire',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hero_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('damage', sa.Integer(), nullable=True),
    sa.Column('cooldown', sa.Integer(), nullable=True),
    sa.Column('is_projectile', sa.Boolean(), nullable=True),
    sa.Column('patch_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hero_id'], ['heroes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patch_id'], ['patch.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'patch_id', name='unique_secondaryfire_per_patch')
    )
    op.create_table('team_ban',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('ban1_id', sa.Integer(), nullable=True),
    sa.Column('ban2_id', sa.Integer(), nullable=True),
    sa.Column('save_id', sa.Integer(), nullable=True),
    sa.Column('bans_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ban1_id'], ['heroes.id'], ),
    sa.ForeignKeyConstraint(['ban2_id'], ['heroes.id'], ),
    sa.ForeignKeyConstraint(['bans_id'], ['bans.id'], ),
    sa.ForeignKeyConstraint(['save_id'], ['heroes.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('team_up',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=25), nullable=False),
    sa.Column('patch_id', sa.Integer(), nullable=False),
    sa.Column('anchor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['anchor_id'], ['heroes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patch_id'], ['patch.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ultimate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hero_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('charge_cost', sa.Float(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('patch_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hero_id'], ['heroes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patch_id'], ['patch.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'patch_id', name='unique_ultimate_per_patch')
    )
    op.create_table('battle_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('partition_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=20), nullable=False),
    sa.Column('actor_player_id', sa.Integer(), nullable=False),
    sa.Column('target_player_id', sa.Integer(), nullable=True),
    sa.Column('ability_type', sa.String(length=20), nullable=True),
    sa.Column('ability_id', sa.Integer(), nullable=True),
    sa.Column('hero_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['actor_player_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['hero_id'], ['heroes.id'], ),
    sa.ForeignKeyConstraint(['partition_id'], ['partition.id'], ),
    sa.ForeignKeyConstraint(['target_player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hero_usage',
    sa.Column('player_map_stats_id', sa.Integer(), nullable=False),
    sa.Column('hero_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hero_id'], ['heroes.id'], ),
    sa.ForeignKeyConstraint(['player_map_stats_id'], ['player_map_stats.id'], ),
    sa.PrimaryKeyConstraint('player_map_stats_id', 'hero_id')
    )
    op.create_table('team_up_effect',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_up_id', sa.Integer(), nullable=False),
    sa.Column('hero_id', sa.Integer(), nullable=False),
    sa.Column('patch_id', sa.Integer(), nullable=False),
    sa.Column('health_bonus', sa.Integer(), nullable=True),
    sa.Column('damage_bonus', sa.Float(), nullable=True),
    sa.Column('ability_name', sa.String(length=20), nullable=False),
    sa.Column('ability_description', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['hero_id'], ['heroes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patch_id'], ['patch.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_up_id'], ['team_up.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('team_up_participants',
    sa.Column('team_up_id', sa.Integer(), nullable=False),
    sa.Column('hero_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hero_id'], ['heroes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_up_id'], ['team_up.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('team_up_id', 'hero_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('team_up_participants')
    op.drop_table('team_up_effect')
    op.drop_table('hero_usage')
    op.drop_table('battle_log')
    op.drop_table('ultimate')
    op.drop_table('team_up')
    op.drop_table('team_ban')
    op.drop_table('secondary_fire')
    op.drop_table('primary_fire')
    op.drop_table('player_match_stats')
    op.drop_table('player_map_stats')
    op.drop_table('passive')
    op.drop_table('partition')
    op.drop_table('ability_shift')
    op.drop_table('ability_e')
    op.drop_table('point')
    op.drop_table('player')
    op.drop_table('match')
    op.drop_table('heroes')
    op.drop_table('team')
    op.drop_table('patch')
    op.drop_table('map')
    op.drop_table('bans')
    # ### end Alembic commands ###
